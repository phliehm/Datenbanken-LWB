ToDo



- 


Sichten:

- unterrichten Relation
- welche Minigames in welchen Räumen, Veranstaltung
- Highscore, abhängig vom Minigames

Suchanfrage: Eigener Suchbildschirm

Dozent eingeben
--> Gibt es den Dozenten?
--> Wenn ja, gib informationen aus

--> Das gleiche mit Veranstaltungen LIKE


--> Suchanfrage an alle Tabellen, mit LIKE und OR verknüpft (JOIN)
SELECT * FROM dozent_innen NATURAL JOIN  npcs NATURAL JOIN unterricht NATURAL JOIN veranstaltungen WHERE npcname OR lieblingsgetraenk LIKE '%Kaff%';

--> DAS GEHT LEIDER NICHT :( Weil der Natural Join auch leer sein kann und dann ist alles leer. Kreuzprodukt gibt zu viele Werte.
- Lösung: Nur definierte NATURAL JOINS nehmen die Ausgaben liefern

Getrennte Suchfelder für:
DozentInnen oder Vorlesungen:
SELECT vname,gebietname,sws,raumnr,npcname FROM veranstaltungen NATURAL JOIN dozent_innen NATURAL JOIN npcs NATURAL JOIN unterricht NATURAL JOIN themengebiete  WHERE CONCAT(npcname,gebietname,vname) LIKE '%s%';

Spielstaende:
SELECT spname,gamename,vname,note,punkte FROM spielstaende NATURAL JOIN minigames NATURAL JOIN veranstaltungen NATURAL JOIN spieler_innen WHERE CONCAT(spname,gamename,vname,note,punkte) LIKE '%th%';


- Veranstaltung mit: DozentIn, AssistentIn


Insert, Delete, Ändern:
Veranstaltung
DozentIn
MiniGames

Ändern:
Feld Dozentenname: --> Selbst eingeben
Feld Lieblingsgetränk: --> hier wird das angezeigt, wenn ich es ändere und ändere ich auch den Eintrag
(ÄndernButton)

Spielstände:
pro Game oder Spieler

Reset alles?
psql befehl, in Konsole ausführen, Martin Skript


Header groß schreiben: SpielerIn anstatt spielerin --> geht wohl nicht direkt in postgresql 



