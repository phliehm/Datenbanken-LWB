------------------------------
SQL-Anfragen aus dem SQL-Quest
------------------------------

Relationen:
---------------------------

NPCs ($ NPCNr, NPCName)			-- NPC: Non Playing Character
Dozent_innen (! NPCNr, Lieblingsgetränk)
sonstigeNPCs (! NPCNr, Funktion)
Veranstaltungen ($ VNr, VName, Kürzel, SWS, GebietNr, ! NPCNr, ! RaumNr)
Themengebiete ($ GebietNr, GebietName)
Minigames ($ GameNr, Game-Name, ! VNr)
Spieler_innen ($ SpNr, SpName, Schüsselanzahl, ! RaumNr)
Räume ($ RaumNr, Raumname, Ort, Funktion)
Unterricht (! VNr, ! NPCNr, ! RaumNr)
Spielstände (! GameNr, ! SpNr, Punkte, Note)
Standorte (! NPCNr, ! RaumNr)
Assistenz (! NPCNr, ! VeranstaltungsNr)


(An-)Fragen:
------------

1a. Welche Räume gibt es in der LWB-Adventure-World?
Raeume
SELECT * FROM raeume;

1b. Welche Funktionen haben die sonstigen NPCs im LWB-Adventure?
π_Funktion (sonstigeNPCs) 
SELECT funktion FROM sonstigenpcs;

2a. Welche Lehrveranstaltungen haben 6 SWS?
σ_(SWS = 6) (Veranstaltungen)
SELECT * FROM veranstaltungen WHERE semester = 4;

2b. Welche Lehrveranstaltungen gibt es im 4. Semester?
σ_(RaumNr = 4) (Veranstaltungen)
SELECT * FROM veranstaltungen WHERE raumnr = 4;

2c. Welche Minigames gibt es im 4. Semester?
σ_(RaumNr = 4) (Minigames ⋈ Veranstaltungen)
SELECT * FROM minigames NATURAL JOIN veranstaltungen WHERE raumnr = 4;

3a. Wie heißen die Spieler_innen, die bisher das LWB-Adventure gespielt haben?
π_SpName (Spieler_innen ⋈ NPCs) 
SELECT spname FROM spieler_innen NATURAL JOIN npcs;

3b. Wie heißen die Dozenten im LWB-Adventure?
π_NPCName (Dozent_innen ⋈ NPCs) 
SELECT npcname FROM dozent_innen NATURAL JOIN npcs;

3c. Welche Funktion hat 'Heidi'?
π_Funktion (sonstigeNPCs ⋈ NPCs) 
SELECT funktion FROM sonstigenpcs NATURAL JOIN npcs WHERE npcname = 'Heidi';

4a. Welche Lehrveranstaltungen haben etwas mit 'Daten' (/'Programmierung') zu tun?
σ_(VName = '*Daten*') (Veranstaltungen)
SELECT * FROM veranstaltungen NATRUAL JOIN themengebiete WHERE vname LIKE '%Daten%';
σ_(GebietName = '*Daten*') (Veranstaltungen ⋈ Themengebiete)
SELECT * FROM veranstaltungen NATRUAL JOIN themengebiete WHERE gebietname LIKE '%Daten%';

4b. Welche Lehrveranstaltungen gehören zum Themengebiet 'Programmierung'?
σ_(GebietName = 'Programmierung') (Veranstaltungen ⋈ Themengebiet)
SELECT * FROM veranstaltungen NATURAL JOIN themengebiete WHERE gebietname = 'Programmierung';

5. Was ist das Lieblingsgetränk von Darth Schmidter?
π_Lieblingsgetränk (σ_(NPCName = 'Darth Schmidter') (Dozent_innen ⋈ NPCs)) 
SELECT lieblingsgetraenk FROM dozent_innen NATURAL JOIN npcs WHERE npcname = 'Darth Schmidter';

6. Welche Lehrveranstaltungen finden nicht in der FU statt?
π_(Vname,Ort) ((Räume \ σ_(Ort = '*FU*')(Räume)) ⋈  Unterricht ⋈ Veranstaltungen)
SELECT vname, raumnr AS semester, ort FROM raeume NATURAL JOIN unterricht NATURAL JOIN veranstaltungen WHERE ort NOT LIKE '%FU%';

7. Welche Dozenten sind in der LWB nur leitend tätig und machen keine Assistenz?
π_NPCName (NPCs ⋈ (π_NPCNr (Dozent_innen) \ π_NPCNr (Assistenz)))
SELECT npcname FROM npcs NATURAL JOIN (SELECT npcnr FROM dozent_innen EXCEPT SELECT npcnr FROM assistenz) AS <alias>;
 
Anfragen, die nur mit erweiterter relationaler Algebra beschrieben werden können:
8. Wieviele Mini-Games gibt es in der LWB-Adventure-World? (Ausgaben-Titel: AnzahlMiniGames)
γ_(AnzahlMiniGames ← COUNT(*)) (Minigames)
SELECT COUNT(*) AS AnzahlMiniGames FROM mini-games;

9. Wieviele SWS müssen in der LWB ingesamt absolviert werden?
(Ausgaben-Titel: GesamtanzahlSWS)
ρ_(GesamtanzahlSWS ← SUM(sws)) (γ_SUM(sws) (Veranstaltungen))
γ_(GesamtanzahlSWS ← SUM(sws)) (Veranstaltungen)
SELECT SUM(sws) AS GesamtanzahlSWS FROM veranstaltungen;

10. Wie heißt die Veranstaltung mit den meisten SWS?
π_Vname (σ_(sws = MAX(sws)) (γ_MAX(sws) (Veranstaltungen)))
SELECT vname FROM veranstaltungen WHERE sws = (SELECT MAX(sws) FROM veranstaltungen);

11. Gesucht sind die Namen, Semester (entspricht RaumNr!) und SWS aller Veranstaltungen von Winnie the K absteigend sortiert nach SWS-Anzahl!
τ_sws↓ (π_(Vname,sws,Semester) (ρ_(Semester ← Raumnr) (σ_(NPCName = 'Winnie the K') (Veranstaltungen ⋈ Unterricht ⋈ NPCs))))
SELECT vname, sws, raumnr AS semester FROM veranstaltungen NATURAL JOIN unterricht NATURAL JOIN npcs WHERE npcname = 'Winnie the K' ORDER BY sws DESC;

12. Wieviele Veranstaltungen gibt es pro Standort?
τ_AnzahlVeranstaltungen (γ_(Ort,AnzahlVeranstaltungen ← COUNT(*)) (Räume ⋈ Unterricht))
SELECT ort, COUNT(*) AS AnzahlVeranstaltungen FROM raeume NATRUAL JOIN unterricht GROUP BY ort ORDER BY COUNT(*);

13. Welche Spieler_innen haben einen Gesamt-Notendurchschnitt, der nicht zwischen 2.0 und 4.0 liegt? (Sortierung nach Gesamt-Notendurchschnitt absteigend)
τ_Schnitt (Spieler_innen ⋈ (σ_(Schnitt<2.0 ∧ Schnitt>4.0) (γ_(Schnitt ← AVG(Note)) (Spielstand))))
Q1 -> γ_(Schnitt ← AVG(Note)) (Spielstand)
Q2 -> σ_(Schnitt<2.0 ∧ Schnitt>4.0) (Q1)
Q3 -> τ_Schnitt (Spieler_innen ⋈ Q2)
SELECT * FROM spieler_innen NATURAL JOIN spielstand WHERE note = (SELECT AVG(note) FROM spielstand WHERE AVG(note) NOT BETWEEN 2.0 AND 4.0);



Ausgaben zu den Anfragen im SQL-Quest:			-- noch anzupassen!!!
--------------------------------------

1.
 RAUM-NR.     RAUM-NAME                      ORT
------------------------------------------------------------------
 1            1. Semester                    FU (Dahlem)
 2            2. Semester                    digital (BBB)
 3            3. Semester                    FU (Dahlem)
 4            4. Semester                    STEPS (Mitte)
 5            Nichtzeugnis-Verleihung        N.N.

2.
 V-NR.   VERANSTALTUNGS-NAME                             DOZ-NR.   SEM.    SWS
--------------------------------------------------------------------------------
 4.1     Nichtsequentielle & verteilte Programmierung    2         4       6
 4.2     Rechnernetze                                    6         4       2
 4.3     Unterrichtsbezogenes Softwarepraktikum          1         4       3
 4.4     Unterrichtsbezogenes Datenbankpraktikum         4         4       3
 4.5     Analyse fachlichen Lernens                      3         4       2

3.
 DOZENTEN-NAME
---------------
 Amoebi
 Darth Schmidter
 Fab Web
 Herk
 J.EthI
 Winnie the K

4.
 V-NR.  VERANSTALTUNGS-NAME                              DOZ-NR.  SEM.    SWS
--------------------------------------------------------------------------------
 1.2    Funktionale Programmierung                        3        1       8
 2.1    Imperative & projektorientierte Programmierung    2        2       7
 4.1    Nichtsequentielle & verteilte Programmierung      2        4       9

5.
 LIEBLINGSGETRÄNK
------------------
 Melissentee

6.
 AnzahlMiniGames
------------------
 9

7.
 GesamtanzahlSWS
-----------------
 64

8.
 V-NAME                         SWS
-----------------------------------------
 Funktionale Programmierung     8

9.
 V-NAME                                    SEMESTER        SWS
---------------------------------------------------------------
 Betriebssystemwerkzeuge                   1. Semester     2
 Grundlagen der technischen Informatik     1. Semester     6
 Rechnerarchitektur                        2. Semester     4
 Fachdidaktik Informatik                   3. Semester     4
 Rechnernetze                              4. Semester     2

10.
 ORT               AnzahlVeranstaltungen
------------------------------------------
 FU (Dahlem)       6
 digital (BBB)     3
 STEPS (Mitte)     5

