
Relationenmodell in dritter Normalform
**************************************
**************************************

Folgende Reltionen werden erzeugt:
$ = Schlüssel; ! = Fremdschlüssel

NPCs($ NPCNr, NPCName)

DozentInnen(! NPCNr, Lieblingsgetränk)

sonstigeNPCs(! NPCNr, Funktion)

Veranstaltungen($ VNr, VName, Kürzel, SWS, GebietNr, ! NPCNr, ! RaumNr)

Minigames($ GameNr, Game-Name, ! VNr)

SpielerInnen($ SpNr, SpName, Schüsselanzahl, ! RaumNr)

Räume($ RaumNr, Raumname, Ort)

Kursräume(Semster,Raum# !)

sonstigeRäume(Funktion,Raum# !)

Spielstände(! GameNr, ! SpNr, Punkte, Note)

Aufenthalt(! NPCNr, ! RaumNr)

Assistenz(! NPCNr, ! VeranstaltungsNr)



Kommentar zum Auflösen der Beziehnungen:
****************************************

1. Dozentinnen sind NPCs: 
IS A-Beziehung => Der übergeordnete Schlüssel wird verwendet.

2. sonstige NPCs sind NPCs:
IS A-Beziehung => Der übergeordnete Schlüssel wird verwendet.

3. DozentInnen unterrichten Veranstaltungen in Kursräumen:
ternäre Beziehung => Zerlegung der ternären Beziehung in eine eigene Relation wäre die 
Regel, ist aber nicht nötig, da jeder Veranstaltung genau eine DozentIn 
und ein Kursraum zugeordent wird. Beides für sich sind obligatorische 1:n-Beziehungen. 
Daher wird die NPC-Nummer und die Raumnummer als Fremdschlüssel in die 
Veranstaltung eingetragen. Das macht NPC-Nummer zu einem 
Schlüsselattribut für Dozenten.

4. DozentInnen assistieren bei Veranstaltungen:
optionale 1:n-Beziehung => Da NULL-Werte verhindert werden sollen wird 
eine eigene Relation Assistenz erstellt. Die NPC-Nummer der DozentInnen 
und die Veranstaltungsnummer werden als Fremdschlüssel eingetragen.

5. MiniGames gehören zu Veranstaltungen:
einseitig optionale 1:1-Beziehung => Der Veranstaltungsschlüssel wird als 
Fremdschlüssel in die Relation Minigames eingetragen.

6. SpielerInnen spielen MiniGames:
zweiseitig optionale n:m-Beziehung mit Attributen => Die Beziehung wird 
in eine eigene Relation Spielstand mit den Schlüsseln der Entitäten 
umgewandelt. Da die Minigames eine 
schwache Entität sind würde man die Veranstalungsnummer als 
Fremdschlüssel verwenden. Dies könnte aber zu Konflikten führen, weil 
nicht jede Veranstaltung ein MiniGame 
hat und es dann auch keine Spielstände geben darf. Daher haben wir uns 
entschieden, den Minigames eine Minigame-Nummer als eigenen Schlüssel 
zu geben und diesen in Spielstände zusammen mit der 
SpielerInnen-Nummer einzutragen.

7. SpielerInnen befindeten sich in Räumen:
obligatorische 1:n-Beziehung => Die Raumnummer wird als Fremdschlüssel 
in die Relation SpielerInnen eingetragen.

8. Kursraum ist ein Raum: 
IS A-Beziehung => Der übergeordnete Schlüssel wird verwendet.

9. sonstiger Raum ist ein Raum: 
IS A-Beziehung => Der übergeordnete Schlüssel wird verwendet.

10. sonstige NPCs sind in den Räumen anzutreffen:
einseitig optionale n:m-Beziehung => Die Schlüssel der Entitäten werden 
als Fremdschlüssel in eine neue Relation Aufenthalt eingetragen.
